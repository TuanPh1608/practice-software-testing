name: 🔍 CS423 API Testing

on:
  push:
    branches: ["**"]  # Run on all branches for testing
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      test_scope:
        description: "Test scope to run"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - auth
          - brands
          - categories
          - invoices

env:
  NODE_VERSION: "18"
  REPORTS_RETENTION_DAYS: 30

jobs:
  # Job 1: Setup Environment & Deploy Local App
  setup:
    name: 🚀 Setup & Deploy Local App
    runs-on: ubuntu-latest
    outputs:
      api-url: ${{ steps.config.outputs.api-url }}
      setup-status: ${{ steps.health.outputs.status }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Setup Docker Environment
        run: |
          docker --version
          docker compose version || docker-compose --version

      - name: 🔧 Configure Environment
        id: config
        run: |
          echo "api-url=http://localhost:8091" >> $GITHUB_OUTPUT

      - name: 🚀 Start Practice Software Testing App
        run: |
          echo "🚀 Starting Practice Software Testing application..."
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d --force-recreate

      - name: ⏱️ Wait for Services
        run: |
          echo "⏱️ Waiting for services to be ready..."
          sleep 60s
        shell: bash

      - name: 🌱 Setup Database
        run: |
          echo "🌱 Setting up database with seed data..."
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: 🔍 Health Check
        id: health
        run: |
          echo "🔍 Performing health check..."
          curl -f -X GET 'http://localhost:8091/status' && echo "status=success" >> $GITHUB_OUTPUT || echo "status=failed" >> $GITHUB_OUTPUT
          curl -v -X POST 'http://localhost:8091/users/login' \
          -H 'Content-Type: application/json' \
          -d '{"email": "admin@practicesoftwaretesting.com", "password": "welcome01"}'

      - name: 📋 Display Environment Info
        run: |
          echo "📋 Environment Information:"
          echo "API URL: ${{ steps.config.outputs.api-url }}"
          echo "Health Status: ${{ steps.health.outputs.status }}"
          echo "Docker containers:"
          docker compose ps

  # Job 2: Authentication API Tests
  test-authentication:
    name: 🔐 Authentication API Tests
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.setup-status == 'success' && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'auth' || github.event.inputs.test_scope == '') }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🚀 Start App (Authentication Tests)
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d --force-recreate
          sleep 60s
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🔐 Run Authentication Tests
        run: |
          echo "🔐 Running Authentication API Tests..."
          mkdir -p reports
          npm run api:test:auth
        continue-on-error: true

      - name: 📤 Upload Authentication Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: authentication-test-reports
          path: reports/authentication-*
          retention-days: ${{ env.REPORTS_RETENTION_DAYS }}

      - name: 🧹 Cleanup
        if: always()
        run: |
          docker compose down || echo "No containers to stop"

  # Job 3: Brands Search API Tests
  test-brands:
    name: 🏷️ Brands Search API Tests
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.setup-status == 'success' && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'brands' || github.event.inputs.test_scope == '') }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🚀 Start App (Brands Tests)
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d --force-recreate
          sleep 60s
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🏷️ Run Brands Search Tests
        run: |
          echo "🏷️ Running Brands Search API Tests..."
          mkdir -p reports
          npm run api:test:brands
        continue-on-error: true

      - name: 📤 Upload Brands Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: brands-test-reports
          path: reports/brands-*
          retention-days: ${{ env.REPORTS_RETENTION_DAYS }}

      - name: 🧹 Cleanup
        if: always()
        run: |
          docker compose down || echo "No containers to stop"

  # Job 4: Categories Search API Tests
  test-categories:
    name: 📂 Categories Search API Tests
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.setup-status == 'success' && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'categories' || github.event.inputs.test_scope == '') }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🚀 Start App (Categories Tests)
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d --force-recreate
          sleep 60s
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: 📦 Install Dependencies
        run: npm install

      - name: 📂 Run Categories Search Tests
        run: |
          echo "📂 Running Categories Search API Tests..."
          mkdir -p reports
          npm run api:test:categories
        continue-on-error: true

      - name: 📤 Upload Categories Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: categories-test-reports
          path: reports/categories-*
          retention-days: ${{ env.REPORTS_RETENTION_DAYS }}

      - name: 🧹 Cleanup
        if: always()
        run: |
          docker compose down || echo "No containers to stop"

  # Job 5: Invoice Status API Tests
  test-invoices:
    name: 📋 Invoice Status API Tests
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.setup-status == 'success' && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'invoices' || github.event.inputs.test_scope == '') }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🚀 Start App (Invoice Tests)
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d --force-recreate
          sleep 60s
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: 📦 Install Dependencies
        run: npm install

      - name: 📋 Run Invoice Status Tests
        run: |
          echo "📋 Running Invoice Status API Tests..."
          mkdir -p reports
          npm run api:test:invoices
        continue-on-error: true

      - name: 📤 Upload Invoice Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: invoice-test-reports
          path: reports/invoices-*
          retention-days: ${{ env.REPORTS_RETENTION_DAYS }}

      - name: 🧹 Cleanup
        if: always()
        run: |
          docker compose down || echo "No containers to stop"

  # Job 6: Generate Final Report
  generate-report:
    name: 📊 Generate CS423 Assignment Report
    runs-on: ubuntu-latest
    needs: [test-authentication, test-brands, test-categories, test-invoices]
    if: always()

    steps:
      - name: 📥 Download All Test Reports
        uses: actions/download-artifact@v4
        with:
          path: ./all-reports

      - name: 📊 Generate Assignment Summary
        run: |
          echo "# 🎓 CS423 API Testing Assignment Report" > CS423-Final-Report.md
          echo "" >> CS423-Final-Report.md
          echo "## 📋 Test Execution Summary" >> CS423-Final-Report.md
          echo "- **Total API Collections**: 4" >> CS423-Final-Report.md
          echo "- **Test Cases**: 110+ comprehensive tests" >> CS423-Final-Report.md
          echo "- **Testing Techniques**: Domain testing, State transition, Security testing" >> CS423-Final-Report.md
          echo "" >> CS423-Final-Report.md
          echo "## 🔍 APIs Tested" >> CS423-Final-Report.md
          echo "1. **Authentication API**: POST /users/login" >> CS423-Final-Report.md
          echo "2. **Brands Search API**: GET /brands/search (35 test cases)" >> CS423-Final-Report.md
          echo "3. **Categories Search API**: GET /categories/search (35 test cases)" >> CS423-Final-Report.md
          echo "4. **Invoice Status API**: PUT /invoices/{id}/status (40 test cases)" >> CS423-Final-Report.md
          echo "" >> CS423-Final-Report.md
          echo "## 📁 Test Reports" >> CS423-Final-Report.md
          echo "All detailed HTML reports are available in the artifacts section." >> CS423-Final-Report.md
          echo "" >> CS423-Final-Report.md
          echo "Generated on: $(date)" >> CS423-Final-Report.md

      - name: 📤 Upload Final Assignment Report
        uses: actions/upload-artifact@v4
        with:
          name: cs423-final-assignment-report
          path: |
            CS423-Final-Report.md
            ./all-reports/
          retention-days: ${{ env.REPORTS_RETENTION_DAYS }}
