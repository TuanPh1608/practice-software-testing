name: Run API Tests

on:
  push:
    branches: [test-api-workflow]
  workflow_dispatch:

concurrency: production_environment

env:
  SPRINT: sprint5-with-bugs

jobs:
  API-testing:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout ‚öôÔ∏è
        uses: actions/checkout@v4

      - name: Start containers üê≥
        env:
          DISABLE_LOGGING: "true"
          SPRINT: sprint5-with-bugs
        run: |
          echo "Starting containers with SPRINT=$SPRINT and DISABLE_LOGGING=$DISABLE_LOGGING"
          docker compose -f docker-compose.yml up -d --force-recreate
          echo "=== Container Status ==="
          docker compose ps

      - name: Sleep for 60 seconds
        run: sleep 60s
        shell: bash

      - name: Create & Seed database üå±
        run: |
          docker compose exec -T laravel-api php artisan migrate:refresh --seed
          docker compose exec -T laravel-api php artisan config:clear
          docker compose exec -T laravel-api php artisan cache:clear
          docker compose exec -T laravel-api php artisan route:clear
          docker compose exec -T laravel-api php artisan view:clear
          
      - name: üîß Fix Laravel permissions & debug
        run: |
          docker compose exec -T laravel-api chmod -R 775 /var/www/storage
          docker compose exec -T laravel-api chmod -R 775 /var/www/bootstrap/cache
          docker compose exec -T laravel-api chown -R www-data:www-data /var/www/storage
          docker compose exec -T laravel-api chown -R www-data:www-data /var/www/bootstrap/cache
          echo "=== Laravel Environment Check ==="
          docker compose exec -T laravel-api php artisan --version
          docker compose exec -T laravel-api php artisan env
          echo "=== Database Connection Test ==="
          docker compose exec -T laravel-api php artisan migrate:status || echo "Migration status failed"

      - name: GET Version
        run: |
          echo "=== Testing /status endpoint ==="
          curl -v -X GET 'http://localhost:8091/status'
          
      - name: üîç Extended Health Checks
        run: |
          echo "=== Testing additional endpoints ==="
          echo "Testing /products endpoint:"
          curl -v -X GET 'http://localhost:8091/products' || echo "Products endpoint failed"
          echo -e "\nTesting /categories endpoint:"
          curl -v -X GET 'http://localhost:8091/categories' || echo "Categories endpoint failed"
          echo -e "\nTesting /brands endpoint:"
          curl -v -X GET 'http://localhost:8091/brands' || echo "Brands endpoint failed"

      - name: POST login
        run: |
          echo "=== Testing login endpoint ==="
          curl -v -X POST 'http://localhost:8091/users/login' \
          -H 'Content-Type: application/json' \
          --data-raw '{"email":"customer@practicesoftwaretesting.com","password":"welcome01"}' || echo "Login failed as expected"

      - name: Install node ‚öôÔ∏è
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Newman dependencies ‚öôÔ∏è
        run: |
          npm install -g newman
          mkdir -p newman-results

      - name: Run Authentication API Tests üß™
        run: |
          newman run collections/Authentication.postman_collection.json \
            --environment environments/CI-Docker.postman_environment.json \
            --reporters cli,json \
            --reporter-json-export newman-results/auth-results.json

      - name: Run Brand Search API Tests üß™
        run: |
          newman run collections/API1-Brands-Search.postman_collection.json \
            --environment environments/CI-Docker.postman_environment.json \
            --reporters cli,json \
            --reporter-json-export newman-results/brands-results.json

      - name: Run Categories API Tests üß™
        run: |
          newman run collections/API2-Categories-Search.postman_collection.json \
            --environment environments/CI-Docker.postman_environment.json \
            --reporters cli,json \
            --reporter-json-export newman-results/categories-results.json

      - name: Run Invoice Status API Tests üß™
        run: |
          newman run collections/API3-Invoice-Status.postman_collection.json \
            --environment environments/CI-Docker.postman_environment.json \
            --reporters cli,json \
            --reporter-json-export newman-results/invoice-results.json

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-api-results üìä
          path: newman-results/
          retention-days: 10

      - name: Show logs on failure üìã
        if: failure()
        run: |
          echo "=== API Container Logs ==="
          docker compose logs laravel-api
          echo "=== Web Container Logs ==="
          docker compose logs web

      - name: Cleanup containers üßπ
        if: always()
        run: docker compose down -v
