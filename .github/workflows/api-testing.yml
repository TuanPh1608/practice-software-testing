name: API Testing

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: "18"

jobs:
  api-testing:
    name: 🧪 Complete API Testing
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Start Application
        run: |
          echo "🚀 Starting Practice Software Testing application..."
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d --force-recreate

      - name: ⏱️ Wait for Services
        run: |
          echo "⏱️ Waiting for services to be ready..."
          echo "Initial wait for containers..."
          sleep 60s

          echo "🔍 Check container health..."
          docker compose ps

          echo "Additional wait for Laravel initialization..."
          sleep 30s
        shell: bash

      - name: 🌱 Setup Database
        run: |
          echo "🌱 Setting up database with seed data..."
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: 🔧 Debug Laravel Application
        run: |
          echo "🔧 Debugging Laravel application..."

          echo "📋 Laravel Environment:"
          docker compose exec -T laravel-api php artisan about

          echo "🗄️ Database Status:"
          docker compose exec -T laravel-api php artisan migrate:status

          echo "👤 Check if users exist:"
          docker compose exec -T laravel-api php artisan db:show

          echo "📝 Laravel Logs (last 20 lines):"
          docker compose exec -T laravel-api tail -20 /var/www/storage/logs/laravel.log || echo "No Laravel logs found"

          echo "🐳 All Container Status:"
          docker compose ps

          echo "🌐 Container Logs:"
          docker compose logs --tail=30

      - name: 🔍 Health Check
        run: |
          echo "🔍 Performing health check..."

          echo "Testing /status endpoint:"
          curl -v -X GET 'http://localhost:8091/status' || echo "Status endpoint failed"

          echo -e "\n🔍 Testing with detailed response:"
          curl -i -X GET 'http://localhost:8091/status' || echo "Detailed status failed"

          echo -e "\n🌐 Test basic connectivity:"
          curl -I 'http://localhost:8091/' || echo "Basic connectivity failed"

      - name: 🔐 Test Login
        run: |
          echo "🔐 Testing login endpoint with different users..."
          
          echo "Testing with customer account:"
          curl -v -X POST 'http://localhost:8091/users/login' \
          -H 'Content-Type: application/json' \
          -d '{"email": "customer@practicesoftwaretesting.com", "password": "welcome01"}' || echo "Customer login failed"
          
          echo -e "\nTesting with admin account:"
          curl -v -X POST 'http://localhost:8091/users/login' \
          -H 'Content-Type: application/json' \
          -d '{"email": "admin@practicesoftwaretesting.com", "password": "welcome01"}' || echo "Admin login failed"

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm install

      - name: 📁 Create Reports Directory
        run: mkdir -p reports

      - name: 🔐 Run Authentication API Tests
        run: |
          echo "🔐 Running Authentication API Tests..."
          npm run api:test:auth
        continue-on-error: true

      - name: 🏷️ Run Brands Search API Tests
        run: |
          echo "🏷️ Running Brands Search API Tests..."
          npm run api:test:brands
        continue-on-error: true

      - name: 📂 Run Categories Search API Tests
        run: |
          echo "📂 Running Categories Search API Tests..."
          npm run api:test:categories
        continue-on-error: true

      - name: 📋 Run Invoice Status API Tests
        run: |
          echo "📋 Running Invoice Status API Tests..."
          npm run api:test:invoices
        continue-on-error: true

      - name: 📊 List Generated Reports
        run: |
          echo "📊 Generated Test Reports:"
          ls -la reports/ || echo "No reports directory found"

      - name: 📤 Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-reports
          path: reports/
          retention-days: 30

      - name: 🧹 Cleanup
        if: always()
        run: |
          echo "🧹 Stopping containers..."
          docker compose down || echo "No containers to stop"

      - name: 📋 Final Summary
        if: always()
        run: |
          echo "🏁 CS423 API Testing Completed"
          echo "✅ All API test suites have been executed"
          echo "📊 Reports uploaded as artifacts"
